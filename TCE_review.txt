
Dear Jin-Soo Kim,

I regret to inform that your paper entitled 
"Utilizing Subpage Programming to Prolong the Lifetime of Embedded NAND Flash-based Storage" 
which was submitted for publication in the IEEE Transactions on Consumer Electronics cannot be published as it was submitted.


REVIEWER 1

This is an interesting paper, with some potential, but the paper fail to discuss the current state of the art. 
One example is that the latest CE research is 7 years old, a lot has changed since then. 
The authors are encouraged to improve their literature discussion.

- 현재 NAND 공정이 발전하면서, NAND Page 크기에 비례하여 수명이 감소하고 있는 추세이다~[ref:Subpage programming]. 
Planar NAND의 경우는 8KiB까지 Page 크기가 증가하였으며, V-NAND의 경우 Page는 16KiB까지 증가하여 device에 사용되고 있다. 
This wastes the limited lifespan of NAND flash-based storage devices 
by repeatedly writing the identical FTL metadata without any outcomes.


REVIEWER 2

The proposed paper presents a novel Flash Translation Layer with the introduction of subpage programming technique, 
in order to minimize the number of writings on NAND flash-based storages, hence increasing the durability of the device.

The paper is well written and structured, the language is clear.
However the innovative contribution is fair and focused on the subpage approach 
previously applied by the authors to a similar context.

Some noteworthy doubts arise from this first review,
hence some modifications are needed as well as an explaination of the relation of this paper with: http://koasas.kaist.ac.kr/handle/10203/221862

- 해당 논문의 기법은 cache buffer 상에서만 처리는 subpage 방법이며, NAND의 page programming만 사용하므로,
본 논문의 subpage programing 기법과 다르다.

UNCLEAR/MISLEADING: In the introduction, you stated that : "FTL metadata writes[...] ranged from 28.1% to 46.7% of the total flash
writes", with the state-of-the-art (page-mapping) FTL in real use conditions. I would specify immediately that this results 
come from your experiments (as clarified in II.C). Then, in section V.B, you stated that: "the total amount of 
FTL metadata writes is 15.16GiB which is almost the same as the total amount of user writes [15.20GiB]", 
which is roughly coherent with the aforementioned statement.
Finally, you add that using SPFTL-BASE (which is not a state-of-the-art algorithm, but a proposal of yours): "We observe 
that the total amount of FTL metadata writes accounts for 5.80GiB in Pattern-A, which is 8.36 times of the data written by the user.
Similar to Pattern-A, Pattern-B and Pattern-C show the similar results." How do you explain this huge increase in FTL metadata writes?
Hence, why is the following reduction significant, given the fact that SPFTL-BASE presents the aforementioned huge increase 
in FTL metadata writes? "We can observe that SPFTL significantly decreases the amount of metadata writes for all the given traces.
Specifically, SPFTL reduces the amount by 43.5%, 43.3%, and 43.6% for Pattern-A, Pattern-B, and Pattern-C, respectively, 
compared to SPFTL-BASE". Reducing 43% of a quantity that is more than 8 times the data written by the user 
does not seem a good result, if compared with the state-of-the-art "FTL metadata writes[...] ranged from 28.1% to 46.7% of 
the total flash writes". Am I missing something? Please clarify and explain carefully this point.
Even in V.D, Fig.5 and Fig.6, every comparison seems between SPFTL and SPFTL-BASE (which are both proposals of yours), with no
comparison with the state-of-the-art algorithms.
So, even in conclusions, your results: "Our evaluation results with real I/O traces show that SPFTL reduces the average amount of
metadata written to the flash memory by up to 43.4%. As a result, we show that SPFTL improves the average lifetime of embedded NAND
flash-based storage devices by up to 18.4% in the environment composed of 20nm class NAND chips." seems to concern the comparison
between SPFTL and SPFTL-BASE, with no real comparison with the state-of-the-art algorithms.

- GXT metadata를 host request마다 저장하도록 하는 버전이며 28.1%, 46.7% 메타데이터를 더 기록한다.
  본 논문에서 제안하는 SPFTL-BASE는 동일 측정 상태에서도 8.3% 6.7% 11.0% 메타데이터를 기록하고 개선되었으므로, 
  State-of-art와 비교할 필요가 없다.

MISSING: The introduction show a scarce presentation of the state-of-the-art, which is partially recovered at the end of the paper 
in the "Related Work" section. However, a brief presentation of the currently used FTL versions in the consumer electronics should
be added.

- 현재 DFTL과 유사할 수 있는 Page mapping FTL이 사용되며, SRAM 크기에 따라 Page mapping 영역을 제한(Zone) 하여 사용한다.

MISSING: In this paper, you did not highlight that "Partial page programming (PP) [...] is not allowed in MLC-mode.", 
as you say in [7]. Assuming that this is still true, I think you should say it explicitly even in this paper. In addition, 
you say "We assume the blocks for metadata are operated in the SLC-mode [18], [19] whereas data blocks are in the MLC-mode. 
We believe that the proposed scheme can be incorporated in MLC or TLC metadata blocks without significant modifications.", 
hence this surely increases the value of your paper. Please add a brief explanation of problems (and, if possible, propose your solutions) in order to extend your algorithm to MLC and TLC blocks.

- MLC에서는 불가능 한데...,

MISSING: Please underline the differences between SPFTL and partial page programming [17], explaining in detail why your approach 
is preferable. Numerical or experimental or simulation results are welcome in order to justify the advantages of SPFTL.

- partial은 실험 결과에서 수명이 낮다. subpage 보다, 따라서 수치 비교가 필요 없는데,....

MISSING: In V.C, you state that "the endurance of SP blocks is improved by 1.71 times due to subpage programming 
in the 20nm class NAND chips [7]", but I did not find explicitly that value in the paper. Could you clarify how the value "1.71" 
is calculated?

- [7]번 이전 실험에서 측정한 수명의 상승된 비율 값인데..

NOMENCLATURE: The renaming of SPFTL to SPFTL-BASE can be misleading, hence I suggest to use the complete name "SPFTL-BASE" 
since the beginning of the paper.

- Using SPFTL-BASE at the beginning

GRAMMAR: The paper is in general clear and well written, although I have found a few typos and grammar mistakes: - 
"metadata should be persist" -> "metadata should be persistent" - "to make the update persistent across a power cycles" -> 
"to make the update persistent across a power cycle"

- Ok

EDITOR

The reviewers assess that the paper is interesting to be published in TCE and it is in the scope of the journal. 
However they have detected several problems than should be solved before its publication. 
I encourage the resubmission of the paper after solving the issues described by the reviewers.

********************************************************************

Resubmission of this manuscript to the IEEE Transactions on Consumer Electronics is encouraged. If you do resubmit, 
it must be done via our website. Do not change the title of the Paper you are resubmitting. Please select the
"Yes" near the bottom of the Paper Submission Form to indicate that this is indeed a resubmission. 
A new Paper Number will be generated, and you will have to submit a new Copyright Transfer 
Form following the Instructions you receive after successful submission.

Thank you for your interest in the Consumer Electronics Society of the IEEE.

Fernando Pescador, IEEE Senior member
Editor-in-Chief, IEEE Transactions on Consumer Electronics 
Department of Computer Science and Electronic Engineering
ETSIST Telecomunicación. Universidad Politécnica de Madrid
Tfno: +34 639359084 Skype: fernando-pescador
email: pescador_tce@sec.upm.es

